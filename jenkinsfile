pipeline {
    agent any

    tools {
        maven "M3"
    }

    environment {
        DOCKER_IMAGE = "bedhiafixokba/devops"
        DOCKER_TAG = "latest"
        BRANCH_NAME = "OKBA"
    }

    parameters {
        string(name: 'BRANCH_NAME', defaultValue: 'OKBA', description: 'Branch to build')
        string(name: 'DOCKER_TAG', defaultValue: 'latest', description: 'Docker image tag')
    }

    stages {

        stage('Git') {
            steps {
                git branch: "${BRANCH_NAME}", url: 'https://github.com/skill-exchange-2025/DEVOPS.git'
            }
        }

        stage('Maven Build') {
            steps {
                // Run Maven build with tests
                bat "mvn clean package -DskipTests"
            }
        }

        stage('Maven Test') {
            steps {
                // Run Maven tests
                bat "mvn test"
            }
        }

        stage('SonarQube Analysis') {
            steps {
                script {
                    def mvn = tool 'M3'; // Use the Maven tool configured in Jenkins
                    withSonarQubeEnv('scanner') { // Replace 'SonarQube' with your SonarQube server name
                    bat "\"${mvn}/bin/mvn\" clean verify sonar:sonar -Dsonar.projectKey=DEVOPS -Dsonar.projectName='DEVOPS'"
                    }
                }
            }
        }


        stage('Docker Login') {
            steps {
                script {
                    docker.withRegistry('https://index.docker.io/v1/', 'docker') {
                        echo 'Logged into Docker Hub'
                    }
                }
            }
        }


        stage('Docker Build & Push') {
            steps {
                script {
                    docker.build("bedhiafixokba/devops:latest").push()
                }
            }
        }

        stage('Deploy') {
            steps {
                script {
                    bat "docker stop ${DOCKER_IMAGE} || exit 0 && docker rm bedhiafixokba-devops || exit 0"
                    bat "docker run -d --name bedhiafixokba-devops -p 8089:8089 bedhiafixokba/devops:${DOCKER_TAG}"
                }
            }
        }
    }

    post {
        always {
            // Archive test results (if any) and correct artifact
            junit '**/target/surefire-reports/*.xml' // Updated pattern
            archiveArtifacts 'target/*.jar' // Archives all JARs
        }
        success {
            echo "Build and Deployment Successful!"
        }
        failure {
            echo "Build or Deployment Failed."
        }
        unstable {
            echo "Build is unstable due to failing tests."
        }
    }
}
